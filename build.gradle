buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
        maven {
            url = 'https://repo.mattmalec.com/repository/releases'
        }
        maven {
            url = "https://maven.mangorage.org/releases"
        }
    }

    dependencies {
        classpath 'gradle.plugin.com.github.johnrengelman:shadow:7.1.2'
    }
}

plugins {
    id 'java'
}

apply plugin: 'maven-publish'

group = 'org.mangorage'
version = getLatestGitTag() + "." + getLatestGitVersion()

println("Version -> " + version)

def getLatestGitTag() {
    def result = "git describe --long --tags".execute().text.trim()
    if (result.empty) {
        throw new RuntimeException("Failed to retrieve commit count")
    } else {
        return result.split("-")[0]
    }
}

def getLatestGitVersion() {
    def result = "git describe --long --tags".execute().text.trim()
    if (result.empty) {
        throw new RuntimeException("Failed to retrieve commit count")
    } else {
        def commitCount = result.split("-")[1].toInteger()
        return commitCount;
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.mangorage.bootstrap.Bootstrap',
                'ModuleMainClass': 'org.mangorage.bootstrap.Bootstrap'
        )
    }
}

tasks.register('runMain', JavaExec) {
    group = 'application'
    description = 'Runs the main class.'

    classpath = sourceSets.main.runtimeClasspath
    mainClass.set('org.mangorage.bootstrap.Bootstrap') // replace this garbage with your actual main class
}

publishing {
    publications.register("mangobotaddon", MavenPublication) {
        artifactId = 'mangobotbootstrap'
        artifact jar
        artifact sourcesJar

        pom {
            name = 'MangoBotCore'
            description = 'The Main Plugin For MangoBot'
            url = 'https://github.com/MangoRageBot/MangoBot'
            issueManagement {
                system = 'github'
                url = 'https://github.com/MangoRageBot/MangoBot/issues'
            }
            developers {
                developer {
                    id = 'mangorage'
                    name = 'MangoRage'
                }
            }
        }
    }

    repositories {
        maven {
            url = "https://maven.mangorage.org/releases"

            credentials {
                username = System.getenv("MAVEN_USER")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}